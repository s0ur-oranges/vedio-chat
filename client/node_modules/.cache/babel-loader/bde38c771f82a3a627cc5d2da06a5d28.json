{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jahanvi Chaudhary\\\\Desktop\\\\webRTC-advanced\\\\client\\\\src\\\\RoomPage\\\\ParticipantsSection\\\\Participants.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setActiveConversation } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleParticipant = props => {\n  const {\n    identity,\n    lastItem,\n    participant,\n    setActiveConversationAction,\n    socketId\n  } = props;\n\n  const handleOpenActiveChatbox = () => {\n    if (participant.socketId !== socketId) {\n      setActiveConversationAction(participant);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"participants_paragraph\",\n      onClick: handleOpenActiveChatbox,\n      children: identity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !lastItem && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"participants_separator_line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_c = SingleParticipant;\n\nconst Participants = _ref => {\n  let {\n    participants,\n    setActiveConversationAction,\n    socketId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participants_container\",\n    children: participants.map((participant, index) => {\n      return /*#__PURE__*/_jsxDEV(SingleParticipant, {\n        lastItem: participants.length === index + 1,\n        participant: participant,\n        identity: participant.identity,\n        setActiveConversationAction: setActiveConversationAction,\n        socketId: socketId\n      }, participant.identity, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Participants;\n\nconst mapStoreStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapActionsToProps = dispatch => {\n  return {\n    setActiveConversationAction: activeConversation => dispatch(setActiveConversation(activeConversation))\n  };\n};\n\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Participants);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleParticipant\");\n$RefreshReg$(_c2, \"Participants\");","map":{"version":3,"names":["React","connect","setActiveConversation","SingleParticipant","props","identity","lastItem","participant","setActiveConversationAction","socketId","handleOpenActiveChatbox","Participants","participants","map","index","length","mapStoreStateToProps","state","mapActionsToProps","dispatch","activeConversation"],"sources":["C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/src/RoomPage/ParticipantsSection/Participants.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveConversation } from \"../../store/actions\";\r\n\r\nconst SingleParticipant = (props) => {\r\n  const {\r\n    identity,\r\n    lastItem,\r\n    participant,\r\n    setActiveConversationAction,\r\n    socketId,\r\n  } = props;\r\n\r\n  const handleOpenActiveChatbox = () => {\r\n    if (participant.socketId !== socketId) {\r\n      setActiveConversationAction(participant);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"participants_paragraph\" onClick={handleOpenActiveChatbox}>\r\n        {identity}\r\n      </p>\r\n      {!lastItem && <span className=\"participants_separator_line\"></span>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Participants = ({\r\n  participants,\r\n  setActiveConversationAction,\r\n  socketId,\r\n}) => {\r\n  return (\r\n    <div className=\"participants_container\">\r\n      {participants.map((participant, index) => {\r\n        return (\r\n          <SingleParticipant\r\n            key={participant.identity}\r\n            lastItem={participants.length === index + 1}\r\n            participant={participant}\r\n            identity={participant.identity}\r\n            setActiveConversationAction={setActiveConversationAction}\r\n            socketId={socketId}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setActiveConversationAction: (activeConversation) =>\r\n      dispatch(setActiveConversation(activeConversation)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Participants);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EACnC,MAAM;IACJC,QADI;IAEJC,QAFI;IAGJC,WAHI;IAIJC,2BAJI;IAKJC;EALI,IAMFL,KANJ;;EAQA,MAAMM,uBAAuB,GAAG,MAAM;IACpC,IAAIH,WAAW,CAACE,QAAZ,KAAyBA,QAA7B,EAAuC;MACrCD,2BAA2B,CAACD,WAAD,CAA3B;IACD;EACF,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAG,SAAS,EAAC,wBAAb;MAAsC,OAAO,EAAEG,uBAA/C;MAAA,UACGL;IADH;MAAA;MAAA;MAAA;IAAA,QADF,EAIG,CAACC,QAAD,iBAAa;MAAM,SAAS,EAAC;IAAhB;MAAA;MAAA;MAAA;IAAA,QAJhB;EAAA,gBADF;AAQD,CAvBD;;KAAMH,iB;;AAyBN,MAAMQ,YAAY,GAAG,QAIf;EAAA,IAJgB;IACpBC,YADoB;IAEpBJ,2BAFoB;IAGpBC;EAHoB,CAIhB;EACJ,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,UACGG,YAAY,CAACC,GAAb,CAAiB,CAACN,WAAD,EAAcO,KAAd,KAAwB;MACxC,oBACE,QAAC,iBAAD;QAEE,QAAQ,EAAEF,YAAY,CAACG,MAAb,KAAwBD,KAAK,GAAG,CAF5C;QAGE,WAAW,EAAEP,WAHf;QAIE,QAAQ,EAAEA,WAAW,CAACF,QAJxB;QAKE,2BAA2B,EAAEG,2BAL/B;QAME,QAAQ,EAAEC;MANZ,GACOF,WAAW,CAACF,QADnB;QAAA;QAAA;QAAA;MAAA,QADF;IAUD,CAXA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CArBD;;MAAMM,Y;;AAuBN,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;EACtC,OAAO,EACL,GAAGA;EADE,CAAP;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;EACtC,OAAO;IACLX,2BAA2B,EAAGY,kBAAD,IAC3BD,QAAQ,CAACjB,qBAAqB,CAACkB,kBAAD,CAAtB;EAFL,CAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CAACe,oBAAD,EAAuBE,iBAAvB,CAAP,CAAiDP,YAAjD,CAAf"},"metadata":{},"sourceType":"module"}