{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jahanvi Chaudhary\\\\Desktop\\\\webRTC-advanced\\\\client\\\\src\\\\RoomPage\\\\VideoSection\\\\SwitchToScreenSharingButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SwitchImg from \"../../resources/images/switchToScreenSharing.svg\";\nimport LocalScreenSharingPreview from \"./LocalScreenSharingPreview\";\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  audio: false,\n  video: true\n};\n\nconst SwitchToScreenSharingButton = () => {\n  _s();\n\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\n\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\"error occurred when trying to get an access to screen share stream\");\n      }\n\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\n        setIsScreenSharingActive(true); // execute here function to switch the video track which we are sending to other users\n      }\n    } else {\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\n      setIsScreenSharingActive(false); // stop screen share stream\n\n      screenSharingStream.getTracks().forEach(t => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_button_container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SwitchImg,\n        onClick: handleScreenShareToggle,\n        className: \"video_button_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isScreenSharingActive && /*#__PURE__*/_jsxDEV(LocalScreenSharingPreview, {\n      stream: screenSharingStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SwitchToScreenSharingButton, \"EDNK554F9kzm0rl1iVOi1mTRTYk=\");\n\n_c = SwitchToScreenSharingButton;\nexport default SwitchToScreenSharingButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchToScreenSharingButton\");","map":{"version":3,"names":["React","useState","LocalScreenSharingPreview","webRTCHandler","constraints","audio","video","SwitchToScreenSharingButton","isScreenSharingActive","setIsScreenSharingActive","screenSharingStream","setScreenSharingStream","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","err","console","log","toggleScreenShare","getTracks","forEach","t","stop","SwitchImg"],"sources":["C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/src/RoomPage/VideoSection/SwitchToScreenSharingButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SwitchImg from \"../../resources/images/switchToScreenSharing.svg\";\r\nimport LocalScreenSharingPreview from \"./LocalScreenSharingPreview\";\r\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst SwitchToScreenSharingButton = () => {\r\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\r\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\r\n\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occurred when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n\r\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\r\n        setIsScreenSharingActive(true);\r\n        // execute here function to switch the video track which we are sending to other users\r\n      }\r\n    } else {\r\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\r\n      setIsScreenSharingActive(false);\r\n\r\n      // stop screen share stream\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video_button_container\">\r\n        <img\r\n          src={SwitchImg}\r\n          onClick={handleScreenShareToggle}\r\n          className=\"video_button_image\"\r\n        />\r\n      </div>\r\n      {isScreenSharingActive && (\r\n        <LocalScreenSharingPreview stream={screenSharingStream} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchToScreenSharingButton;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAO,KAAKC,aAAZ,MAA+B,2BAA/B;;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,KADW;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,MAAMC,2BAA2B,GAAG,MAAM;EAAA;;EACxC,MAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDR,QAAQ,CAAC,KAAD,CAAlE;EACA,MAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,IAAD,CAA9D;;EAEA,MAAMW,uBAAuB,GAAG,YAAY;IAC1C,IAAI,CAACJ,qBAAL,EAA4B;MAC1B,IAAIK,MAAM,GAAG,IAAb;;MACA,IAAI;QACFA,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuCZ,WAAvC,CAAf;MACD,CAFD,CAEE,OAAOa,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CACE,oEADF;MAGD;;MACD,IAAIN,MAAJ,EAAY;QACVF,sBAAsB,CAACE,MAAD,CAAtB;QAEAV,aAAa,CAACiB,iBAAd,CAAgCZ,qBAAhC,EAAuDK,MAAvD;QACAJ,wBAAwB,CAAC,IAAD,CAAxB,CAJU,CAKV;MACD;IACF,CAhBD,MAgBO;MACLN,aAAa,CAACiB,iBAAd,CAAgCZ,qBAAhC;MACAC,wBAAwB,CAAC,KAAD,CAAxB,CAFK,CAIL;;MACAC,mBAAmB,CAACW,SAApB,GAAgCC,OAAhC,CAAyCC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA/C;MACAb,sBAAsB,CAAC,IAAD,CAAtB;IACD;EACF,CAzBD;;EA2BA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,wBAAf;MAAA,uBACE;QACE,GAAG,EAAEc,SADP;QAEE,OAAO,EAAEb,uBAFX;QAGE,SAAS,EAAC;MAHZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAQGJ,qBAAqB,iBACpB,QAAC,yBAAD;MAA2B,MAAM,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA,gBADF;AAcD,CA7CD;;GAAMH,2B;;KAAAA,2B;AA+CN,eAAeA,2BAAf"},"metadata":{},"sourceType":"module"}