{"ast":null,"code":"import _objectSpread from\"C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import JoinRoomInputs from\"./JoinRoomInputs\";import{connect}from\"react-redux\";import OnlyWithAudioCheckbox from\"./OnlyWithAudioCheckbox\";import{setConnectOnlyWithAudio as _setConnectOnlyWithAudio,setIdentity,setRoomId}from\"../store/actions\";import ErrorMessage from\"./ErrorMessage\";import JoinRoomButtons from\"./JoinRoomButtons\";import{useHistory}from\"react-router-dom\";import{getRoomExists}from\"../utils/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JoinRoomContent=function JoinRoomContent(props){var isRoomHost=props.isRoomHost,setConnectOnlyWithAudio=props.setConnectOnlyWithAudio,connectOnlyWithAudio=props.connectOnlyWithAudio,setIdentityAction=props.setIdentityAction,setRoomIdAction=props.setRoomIdAction;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),roomIdValue=_useState2[0],setRoomIdValue=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),nameValue=_useState4[0],setNameValue=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var history=useHistory();var handleJoinRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIdentityAction(nameValue);if(!isRoomHost){_context.next=5;break;}createRoom();_context.next=7;break;case 5:_context.next=7;return joinRoom();case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleJoinRoom(){return _ref.apply(this,arguments);};}();var joinRoom=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var responseMessage,roomExists,full;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getRoomExists(roomIdValue);case 2:responseMessage=_context2.sent;roomExists=responseMessage.roomExists,full=responseMessage.full;if(roomExists){if(full){setErrorMessage(\"Meeting is full. Please try again later.\");}else{// join a room !\nsetRoomIdAction(roomIdValue);history.push(\"/room\");}}else{setErrorMessage(\"Meeting not found. Check your meeting id.\");}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function joinRoom(){return _ref2.apply(this,arguments);};}();var createRoom=function createRoom(){history.push(\"/room\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(JoinRoomInputs,{roomIdValue:roomIdValue,setRoomIdValue:setRoomIdValue,nameValue:nameValue,setNameValue:setNameValue,isRoomHost:isRoomHost}),/*#__PURE__*/_jsx(OnlyWithAudioCheckbox,{setConnectOnlyWithAudio:setConnectOnlyWithAudio,connectOnlyWithAudio:connectOnlyWithAudio}),/*#__PURE__*/_jsx(ErrorMessage,{errorMessage:errorMessage}),/*#__PURE__*/_jsx(JoinRoomButtons,{handleJoinRoom:handleJoinRoom,isRoomHost:isRoomHost})]});};var mapStoreStateToProps=function mapStoreStateToProps(state){return _objectSpread({},state);};var mapActionsToProps=function mapActionsToProps(dispatch){return{setConnectOnlyWithAudio:function setConnectOnlyWithAudio(onlyWithAudio){return dispatch(_setConnectOnlyWithAudio(onlyWithAudio));},setIdentityAction:function setIdentityAction(identity){return dispatch(setIdentity(identity));},setRoomIdAction:function setRoomIdAction(roomId){return dispatch(setRoomId(roomId));}};};export default connect(mapStoreStateToProps,mapActionsToProps)(JoinRoomContent);","map":{"version":3,"names":["React","useState","JoinRoomInputs","connect","OnlyWithAudioCheckbox","setConnectOnlyWithAudio","setIdentity","setRoomId","ErrorMessage","JoinRoomButtons","useHistory","getRoomExists","JoinRoomContent","props","isRoomHost","connectOnlyWithAudio","setIdentityAction","setRoomIdAction","roomIdValue","setRoomIdValue","nameValue","setNameValue","errorMessage","setErrorMessage","history","handleJoinRoom","createRoom","joinRoom","responseMessage","roomExists","full","push","mapStoreStateToProps","state","mapActionsToProps","dispatch","onlyWithAudio","identity","roomId"],"sources":["C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/src/JoinRoomPage/JoinRoomContent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport JoinRoomInputs from \"./JoinRoomInputs\";\r\nimport { connect } from \"react-redux\";\r\nimport OnlyWithAudioCheckbox from \"./OnlyWithAudioCheckbox\";\r\nimport {\r\n  setConnectOnlyWithAudio,\r\n  setIdentity,\r\n  setRoomId,\r\n} from \"../store/actions\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport JoinRoomButtons from \"./JoinRoomButtons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getRoomExists } from \"../utils/api\";\r\n\r\nconst JoinRoomContent = (props) => {\r\n  const {\r\n    isRoomHost,\r\n    setConnectOnlyWithAudio,\r\n    connectOnlyWithAudio,\r\n    setIdentityAction,\r\n    setRoomIdAction,\r\n  } = props;\r\n\r\n  const [roomIdValue, setRoomIdValue] = useState(\"\");\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleJoinRoom = async () => {\r\n    setIdentityAction(nameValue);\r\n    if (isRoomHost) {\r\n      createRoom();\r\n    } else {\r\n      await joinRoom();\r\n    }\r\n  };\r\n\r\n  const joinRoom = async () => {\r\n    const responseMessage = await getRoomExists(roomIdValue);\r\n\r\n    const { roomExists, full } = responseMessage;\r\n\r\n    if (roomExists) {\r\n      if (full) {\r\n        setErrorMessage(\"Meeting is full. Please try again later.\");\r\n      } else {\r\n        // join a room !\r\n        setRoomIdAction(roomIdValue);\r\n        history.push(\"/room\");\r\n      }\r\n    } else {\r\n      setErrorMessage(\"Meeting not found. Check your meeting id.\");\r\n    }\r\n  };\r\n\r\n  const createRoom = () => {\r\n    history.push(\"/room\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JoinRoomInputs\r\n        roomIdValue={roomIdValue}\r\n        setRoomIdValue={setRoomIdValue}\r\n        nameValue={nameValue}\r\n        setNameValue={setNameValue}\r\n        isRoomHost={isRoomHost}\r\n      />\r\n      <OnlyWithAudioCheckbox\r\n        setConnectOnlyWithAudio={setConnectOnlyWithAudio}\r\n        connectOnlyWithAudio={connectOnlyWithAudio}\r\n      />\r\n      <ErrorMessage errorMessage={errorMessage} />\r\n      <JoinRoomButtons\r\n        handleJoinRoom={handleJoinRoom}\r\n        isRoomHost={isRoomHost}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setConnectOnlyWithAudio: (onlyWithAudio) =>\r\n      dispatch(setConnectOnlyWithAudio(onlyWithAudio)),\r\n    setIdentityAction: (identity) => dispatch(setIdentity(identity)),\r\n    setRoomIdAction: (roomId) => dispatch(setRoomId(roomId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStoreStateToProps,\r\n  mapActionsToProps\r\n)(JoinRoomContent);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}