{"ast":null,"code":"import Actions from \"./actions\";\nconst initState = {\n  identity: \"\",\n  isRoomHost: false,\n  connectOnlyWithAudio: false,\n  roomId: null,\n  showOverlay: true,\n  participants: [],\n  messages: [],\n  activeConversation: null,\n  directChatHistory: [],\n  socketId: null\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.SET_IS_ROOM_HOST:\n      return { ...state,\n        isRoomHost: action.isRoomHost\n      };\n\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\n      return { ...state,\n        connectOnlyWithAudio: action.onlyWithAudio\n      };\n\n    case Actions.SET_ROOM_ID:\n      return { ...state,\n        roomId: action.roomId\n      };\n\n    case Actions.SET_IDENTITY:\n      return { ...state,\n        identity: action.identity\n      };\n\n    case Actions.SET_SHOW_OVERLAY:\n      return { ...state,\n        showOverlay: action.showOverlay\n      };\n\n    case Actions.SET_PARTICIPANTS:\n      return { ...state,\n        participants: action.participants\n      };\n\n    case Actions.SET_MESSAGES:\n      return { ...state,\n        messages: action.messages\n      };\n\n    case Actions.SET_ACTIVE_CONVERSATION:\n      return { ...state,\n        activeConversation: action.activeConversation\n      };\n\n    case Actions.SET_DIRECT_CHAT_HISTORY:\n      return { ...state,\n        directChatHistory: action.directChatHistory\n      };\n\n    case Actions.SET_SOCKET_ID:\n      return { ...state,\n        socketId: action.socketId\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["Actions","initState","identity","isRoomHost","connectOnlyWithAudio","roomId","showOverlay","participants","messages","activeConversation","directChatHistory","socketId","reducer","state","action","type","SET_IS_ROOM_HOST","SET_CONNECT_ONLY_WITH_AUDIO","onlyWithAudio","SET_ROOM_ID","SET_IDENTITY","SET_SHOW_OVERLAY","SET_PARTICIPANTS","SET_MESSAGES","SET_ACTIVE_CONVERSATION","SET_DIRECT_CHAT_HISTORY","SET_SOCKET_ID"],"sources":["C:/Users/Jahanvi Chaudhary/Desktop/webRTC-advanced/client/src/store/reducer.js"],"sourcesContent":["import Actions from \"./actions\";\r\n\r\nconst initState = {\r\n  identity: \"\",\r\n  isRoomHost: false,\r\n  connectOnlyWithAudio: false,\r\n  roomId: null,\r\n  showOverlay: true,\r\n  participants: [],\r\n  messages: [],\r\n  activeConversation: null,\r\n  directChatHistory: [],\r\n  socketId: null\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case Actions.SET_IS_ROOM_HOST:\r\n      return {\r\n        ...state,\r\n        isRoomHost: action.isRoomHost,\r\n      };\r\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\r\n      return {\r\n        ...state,\r\n        connectOnlyWithAudio: action.onlyWithAudio,\r\n      };\r\n    case Actions.SET_ROOM_ID:\r\n      return {\r\n        ...state,\r\n        roomId: action.roomId,\r\n      };\r\n    case Actions.SET_IDENTITY:\r\n      return {\r\n        ...state,\r\n        identity: action.identity,\r\n      };\r\n    case Actions.SET_SHOW_OVERLAY:\r\n      return {\r\n        ...state,\r\n        showOverlay: action.showOverlay,\r\n      };\r\n    case Actions.SET_PARTICIPANTS:\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case Actions.SET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.messages,\r\n      };\r\n    case Actions.SET_ACTIVE_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        activeConversation: action.activeConversation\r\n      }\r\n    case Actions.SET_DIRECT_CHAT_HISTORY:\r\n      return {\r\n        ...state,\r\n        directChatHistory: action.directChatHistory\r\n      };\r\n    case Actions.SET_SOCKET_ID:\r\n      return {\r\n        ...state,\r\n        socketId: action.socketId\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAE,EADM;EAEhBC,UAAU,EAAE,KAFI;EAGhBC,oBAAoB,EAAE,KAHN;EAIhBC,MAAM,EAAE,IAJQ;EAKhBC,WAAW,EAAE,IALG;EAMhBC,YAAY,EAAE,EANE;EAOhBC,QAAQ,EAAE,EAPM;EAQhBC,kBAAkB,EAAE,IARJ;EAShBC,iBAAiB,EAAE,EATH;EAUhBC,QAAQ,EAAE;AAVM,CAAlB;;AAaA,MAAMC,OAAO,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAtBZ,SAAsB;EAAA,IAAXa,MAAW;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKf,OAAO,CAACgB,gBAAb;MACE,OAAO,EACL,GAAGH,KADE;QAELV,UAAU,EAAEW,MAAM,CAACX;MAFd,CAAP;;IAIF,KAAKH,OAAO,CAACiB,2BAAb;MACE,OAAO,EACL,GAAGJ,KADE;QAELT,oBAAoB,EAAEU,MAAM,CAACI;MAFxB,CAAP;;IAIF,KAAKlB,OAAO,CAACmB,WAAb;MACE,OAAO,EACL,GAAGN,KADE;QAELR,MAAM,EAAES,MAAM,CAACT;MAFV,CAAP;;IAIF,KAAKL,OAAO,CAACoB,YAAb;MACE,OAAO,EACL,GAAGP,KADE;QAELX,QAAQ,EAAEY,MAAM,CAACZ;MAFZ,CAAP;;IAIF,KAAKF,OAAO,CAACqB,gBAAb;MACE,OAAO,EACL,GAAGR,KADE;QAELP,WAAW,EAAEQ,MAAM,CAACR;MAFf,CAAP;;IAIF,KAAKN,OAAO,CAACsB,gBAAb;MACE,OAAO,EACL,GAAGT,KADE;QAELN,YAAY,EAAEO,MAAM,CAACP;MAFhB,CAAP;;IAIF,KAAKP,OAAO,CAACuB,YAAb;MACE,OAAO,EACL,GAAGV,KADE;QAELL,QAAQ,EAAEM,MAAM,CAACN;MAFZ,CAAP;;IAIF,KAAKR,OAAO,CAACwB,uBAAb;MACE,OAAO,EACL,GAAGX,KADE;QAELJ,kBAAkB,EAAEK,MAAM,CAACL;MAFtB,CAAP;;IAIF,KAAKT,OAAO,CAACyB,uBAAb;MACE,OAAO,EACL,GAAGZ,KADE;QAELH,iBAAiB,EAAEI,MAAM,CAACJ;MAFrB,CAAP;;IAIF,KAAKV,OAAO,CAAC0B,aAAb;MACE,OAAO,EACL,GAAGb,KADE;QAELF,QAAQ,EAAEG,MAAM,CAACH;MAFZ,CAAP;;IAIF;MACE,OAAOE,KAAP;EApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}