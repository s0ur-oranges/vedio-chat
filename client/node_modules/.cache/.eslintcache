[{"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\index.js":"1","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\App.js":"2","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\serviceWorker.js":"3","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\store.js":"4","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\IntroductionPage.js":"5","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomPage.js":"6","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\RoomPage.js":"7","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\wss.js":"8","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\reducer.js":"9","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\ConnectingButtons.js":"10","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\actions.js":"11","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomTitle.js":"12","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\RoomLabel.js":"13","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\Overlay.js":"14","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\directMessages.js":"15","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\webRTCHandler.js":"16","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomContent.js":"17","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\ChatSection.js":"18","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\VideoSection.js":"19","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\ParticipantsSection.js":"20","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\ConnectingButton.js":"21","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\turn.js":"22","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomInputs.js":"23","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\ErrorMessage.js":"24","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\OnlyWithAudioCheckbox.js":"25","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\api.js":"26","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomButtons.js":"27","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\ChatLabel.js":"28","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\Messages.js":"29","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\NewMessage.js":"30","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\ParticipantsLabel.js":"31","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\VideoButtons.js":"32","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\Participants.js":"33","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChat.js":"34","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\LeaveRoomButton.js":"35","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\CameraButton.js":"36","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\SwitchToScreenSharingButton.js":"37","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\MicButton.js":"38","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\ConversationNotChosen.js":"39","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\NewMessage.js":"40","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChatHeader.js":"41","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\MessagesContainer.js":"42","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\LocalScreenSharingPreview.js":"43"},{"size":629,"mtime":1627788332000,"results":"44","hashOfConfig":"45"},{"size":762,"mtime":1628651190000,"results":"46","hashOfConfig":"45"},{"size":5014,"mtime":499153500000,"results":"47","hashOfConfig":"45"},{"size":170,"mtime":1627996586000,"results":"48","hashOfConfig":"45"},{"size":863,"mtime":1659959011455,"results":"49","hashOfConfig":"45"},{"size":1141,"mtime":1627800798000,"results":"50","hashOfConfig":"45"},{"size":1238,"mtime":1628751298000,"results":"51","hashOfConfig":"45"},{"size":2263,"mtime":1631495806000,"results":"52","hashOfConfig":"45"},{"size":1674,"mtime":1631450744000,"results":"53","hashOfConfig":"45"},{"size":761,"mtime":1627792876000,"results":"54","hashOfConfig":"45"},{"size":1777,"mtime":1631450742000,"results":"55","hashOfConfig":"45"},{"size":239,"mtime":1627799492000,"results":"56","hashOfConfig":"45"},{"size":225,"mtime":1627830466000,"results":"57","hashOfConfig":"45"},{"size":195,"mtime":1627996456000,"results":"58","hashOfConfig":"45"},{"size":1495,"mtime":1631496370000,"results":"59","hashOfConfig":"45"},{"size":7851,"mtime":1628756578000,"results":"60","hashOfConfig":"45"},{"size":2633,"mtime":1627829408000,"results":"61","hashOfConfig":"45"},{"size":347,"mtime":1628738848000,"results":"62","hashOfConfig":"45"},{"size":241,"mtime":1627990616000,"results":"63","hashOfConfig":"45"},{"size":418,"mtime":1631453182000,"results":"64","hashOfConfig":"45"},{"size":384,"mtime":1627792622000,"results":"65","hashOfConfig":"45"},{"size":360,"mtime":1628755080000,"results":"66","hashOfConfig":"45"},{"size":1018,"mtime":1627801376000,"results":"67","hashOfConfig":"45"},{"size":292,"mtime":1627803868000,"results":"68","hashOfConfig":"45"},{"size":680,"mtime":1627802626000,"results":"69","hashOfConfig":"45"},{"size":388,"mtime":1628754942000,"results":"70","hashOfConfig":"45"},{"size":941,"mtime":1628651204000,"results":"71","hashOfConfig":"45"},{"size":205,"mtime":1628737562000,"results":"72","hashOfConfig":"45"},{"size":1320,"mtime":1628740980000,"results":"73","hashOfConfig":"45"},{"size":1106,"mtime":1628740818000,"results":"74","hashOfConfig":"45"},{"size":256,"mtime":1627831970000,"results":"75","hashOfConfig":"45"},{"size":747,"mtime":1628751506000,"results":"76","hashOfConfig":"45"},{"size":1625,"mtime":1631494176000,"results":"77","hashOfConfig":"45"},{"size":1397,"mtime":1631497172000,"results":"78","hashOfConfig":"45"},{"size":427,"mtime":1627991522000,"results":"79","hashOfConfig":"45"},{"size":810,"mtime":1628677374000,"results":"80","hashOfConfig":"45"},{"size":1811,"mtime":1628736228000,"results":"81","hashOfConfig":"45"},{"size":715,"mtime":1628677158000,"results":"82","hashOfConfig":"45"},{"size":334,"mtime":1631453074000,"results":"83","hashOfConfig":"45"},{"size":1362,"mtime":1631495738000,"results":"84","hashOfConfig":"45"},{"size":357,"mtime":1631451520000,"results":"85","hashOfConfig":"45"},{"size":1121,"mtime":1631497392000,"results":"86","hashOfConfig":"45"},{"size":497,"mtime":1628679958000,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i1miy1",{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\index.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\App.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\serviceWorker.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\store.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\IntroductionPage.js",["183","184"],"import React, { useEffect } from \"react\";\r\nimport logo from \"../resources/images/logo.png\";\r\nimport ConnectingButtons from \"./ConnectingButtons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsRoomHost } from \"../store/actions\";\r\n\r\nimport \"./IntroductionPage.css\";\r\n\r\nconst IntroductionPage = ({ setIsRoomHostAction }) => {\r\n  useEffect(() => {\r\n    setIsRoomHostAction(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"introduction_page_container\">\r\n      <div className=\"introduction_page_panel\">\r\n        <img src={logo} className=\"introduction_page_image\"></img>\r\n        <ConnectingButtons />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRoomHost(isRoomHost)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(IntroductionPage);\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomPage.js",["185"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsRoomHost } from \"../store/actions\";\r\nimport JoinRoomTitle from \"./JoinRoomTitle\";\r\nimport JoinRoomContent from \"./JoinRoomContent\";\r\n\r\nimport \"./JoinRoomPage.css\";\r\n\r\nconst JoinRoomPage = (props) => {\r\n  const { setIsRoomHostAction, isRoomHost } = props;\r\n\r\n  const search = useLocation().search;\r\n\r\n  useEffect(() => {\r\n    const isRoomHost = new URLSearchParams(search).get(\"host\");\r\n    if (isRoomHost) {\r\n      setIsRoomHostAction(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"join_room_page_container\">\r\n      <div className=\"join_room_page_panel\">\r\n        <JoinRoomTitle isRoomHost={isRoomHost} />\r\n        <JoinRoomContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRoomHost(isRoomHost)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapActionsToProps)(JoinRoomPage);\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\RoomPage.js",["186"],"import React, { useEffect } from \"react\";\r\nimport ChatSection from \"./ChatSection/ChatSection\";\r\nimport ParticipantsSection from \"./ParticipantsSection/ParticipantsSection\";\r\nimport VideoSection from \"./VideoSection/VideoSection\";\r\nimport RoomLabel from \"./RoomLabel\";\r\nimport { connect } from \"react-redux\";\r\nimport * as webRTCHandler from \"../utils/webRTCHandler\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nimport \"./RoomPage.css\";\r\n\r\nconst RoomPage = ({\r\n  roomId,\r\n  identity,\r\n  isRoomHost,\r\n  showOverlay,\r\n  connectOnlyWithAudio,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!isRoomHost && !roomId) {\r\n      const siteUrl = window.location.origin;\r\n      window.location.href = siteUrl;\r\n    } else {\r\n      webRTCHandler.getLocalPreviewAndInitRoomConnection(\r\n        isRoomHost,\r\n        identity,\r\n        roomId,\r\n        connectOnlyWithAudio\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"room_container\">\r\n      <ParticipantsSection />\r\n      <VideoSection />\r\n      <ChatSection />\r\n      <RoomLabel roomId={roomId} />\r\n      {showOverlay && <Overlay />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(RoomPage);\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\wss.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\reducer.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\ConnectingButtons.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\store\\actions.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomTitle.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\RoomLabel.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\Overlay.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\directMessages.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\webRTCHandler.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomContent.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\ChatSection.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\VideoSection.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\ParticipantsSection.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\IntroductionPage\\ConnectingButton.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\turn.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomInputs.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\ErrorMessage.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\OnlyWithAudioCheckbox.js",["187"],"import React from \"react\";\r\nimport CheckImg from \"../resources/images/check.png\";\r\n\r\nconst OnlyWithAudioCheckbox = ({\r\n  connectOnlyWithAudio,\r\n  setConnectOnlyWithAudio,\r\n}) => {\r\n  const handleConnectionTypeChange = () => {\r\n    setConnectOnlyWithAudio(!connectOnlyWithAudio);\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkbox_container\">\r\n      <div className=\"checkbox_connection\" onClick={handleConnectionTypeChange}>\r\n        {connectOnlyWithAudio && (\r\n          <img className=\"checkbox_image\" src={CheckImg}></img>\r\n        )}\r\n      </div>\r\n      <p className=\"checkbox_container_paragraph\">Only audio</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnlyWithAudioCheckbox;\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\utils\\api.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\JoinRoomPage\\JoinRoomButtons.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\ChatLabel.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\Messages.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ChatSection\\NewMessage.js",["188"],"import React, { useState } from \"react\";\nimport SendMessageButton from \"../../resources/images/sendMessageButton.svg\";\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\n\nconst NewMessage = () => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleTextChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyPressed = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n\n      // send message to other users\n      sendMessage();\n    }\n  };\n\n  const sendMessage = () => {\n    if (message.length > 0) {\n      webRTCHandler.sendMessageUsingDataChannel(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"new_message_container\">\n      <input\n        className=\"new_message_input\"\n        value={message}\n        onChange={handleTextChange}\n        placeholder=\"Type your message ...\"\n        type=\"text\"\n        onKeyDown={handleKeyPressed}\n      />\n      <img\n        className=\"new_message_button\"\n        src={SendMessageButton}\n        onClick={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default NewMessage;\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\ParticipantsLabel.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\VideoButtons.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\Participants.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChat.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\LeaveRoomButton.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\CameraButton.js",["189"],"import React, { useState } from \"react\";\r\n\r\nimport CameraButtonImg from \"../../resources/images/camera.svg\";\r\nimport CameraButtonImgOff from \"../../resources/images/cameraOff.svg\";\r\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\r\n\r\nconst CameraButton = () => {\r\n  const [isLocalVideoDisabled, setIsLocalVideoDisabled] = useState(false);\r\n\r\n  const handleCameraButtonPressed = () => {\r\n    webRTCHandler.toggleCamera(isLocalVideoDisabled);\r\n\r\n    setIsLocalVideoDisabled(!isLocalVideoDisabled);\r\n  };\r\n\r\n  return (\r\n    <div className=\"video_button_container\">\r\n      <img\r\n        src={isLocalVideoDisabled ? CameraButtonImgOff : CameraButtonImg}\r\n        className=\"video_button_image\"\r\n        onClick={handleCameraButtonPressed}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraButton;\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\SwitchToScreenSharingButton.js",["190"],"import React, { useState } from \"react\";\r\nimport SwitchImg from \"../../resources/images/switchToScreenSharing.svg\";\r\nimport LocalScreenSharingPreview from \"./LocalScreenSharingPreview\";\r\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst SwitchToScreenSharingButton = () => {\r\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\r\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\r\n\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occurred when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n\r\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\r\n        setIsScreenSharingActive(true);\r\n        // execute here function to switch the video track which we are sending to other users\r\n      }\r\n    } else {\r\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\r\n      setIsScreenSharingActive(false);\r\n\r\n      // stop screen share stream\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video_button_container\">\r\n        <img\r\n          src={SwitchImg}\r\n          onClick={handleScreenShareToggle}\r\n          className=\"video_button_image\"\r\n        />\r\n      </div>\r\n      {isScreenSharingActive && (\r\n        <LocalScreenSharingPreview stream={screenSharingStream} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchToScreenSharingButton;\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\MicButton.js",["191"],"import React, { useState } from \"react\";\r\nimport MicButtonImg from \"../../resources/images/mic.svg\";\r\nimport MicButtonImgOff from \"../../resources/images/micOff.svg\";\r\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\r\n\r\nconst MicButton = () => {\r\n  const [isMicMuted, setIsMicMuted] = useState(false);\r\n\r\n  const handleMicButtonPressed = () => {\r\n    webRTCHandler.toggleMic(isMicMuted);\r\n\r\n    setIsMicMuted(!isMicMuted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"video_button_container\">\r\n      <img\r\n        src={isMicMuted ? MicButtonImgOff : MicButtonImg}\r\n        onClick={handleMicButtonPressed}\r\n        className=\"video_button_image\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicButton;\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\ConversationNotChosen.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\NewMessage.js",["192"],"import React, { useState } from \"react\";\r\nimport sendMessageButton from \"../../../resources/images/sendMessageButton.svg\";\r\nimport * as wss from \"../../../utils/wss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NewMessage = ({ activeConversation, identity }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    wss.sendDirectMessage({\r\n      receiverSocketId: activeConversation.socketId,\r\n      identity: identity,\r\n      messageContent: message,\r\n    });\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleTextChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyPressed = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new_message_container new_message_direct_border\">\r\n      <input\r\n        className=\"new_message_input\"\r\n        value={message}\r\n        onChange={handleTextChange}\r\n        placeholder=\"Type your message..\"\r\n        type=\"text\"\r\n        onKeyDown={handleKeyPressed}\r\n      />\r\n      <img\r\n        className=\"new_message_button\"\r\n        src={sendMessageButton}\r\n        onClick={sendMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(NewMessage);\r\n","C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChatHeader.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\ParticipantsSection\\DirectChat\\MessagesContainer.js",[],"C:\\Users\\Jahanvi Chaudhary\\Desktop\\webRTC-advanced\\client\\src\\RoomPage\\VideoSection\\LocalScreenSharingPreview.js",[],{"ruleId":"193","severity":1,"message":"194","line":12,"column":6,"nodeType":"195","endLine":12,"endColumn":8,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":17,"column":9,"nodeType":"199","endLine":17,"endColumn":61},{"ruleId":"193","severity":1,"message":"200","line":20,"column":6,"nodeType":"195","endLine":20,"endColumn":8,"suggestions":"201"},{"ruleId":"193","severity":1,"message":"202","line":31,"column":6,"nodeType":"195","endLine":31,"endColumn":8,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"198","line":16,"column":11,"nodeType":"199","endLine":16,"endColumn":58},{"ruleId":"197","severity":1,"message":"198","line":38,"column":7,"nodeType":"199","endLine":42,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":18,"column":7,"nodeType":"199","endLine":22,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":45,"column":9,"nodeType":"199","endLine":49,"endColumn":11},{"ruleId":"197","severity":1,"message":"198","line":17,"column":7,"nodeType":"199","endLine":21,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":40,"column":7,"nodeType":"199","endLine":44,"endColumn":9},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsRoomHostAction'. Either include it or remove the dependency array. If 'setIsRoomHostAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'search' and 'setIsRoomHostAction'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'connectOnlyWithAudio', 'identity', 'isRoomHost', and 'roomId'. Either include them or remove the dependency array.",["206"],{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [setIsRoomHostAction]",{"range":"213","text":"214"},"Update the dependencies array to be: [search, setIsRoomHostAction]",{"range":"215","text":"216"},"Update the dependencies array to be: [connectOnlyWithAudio, identity, isRoomHost, roomId]",{"range":"217","text":"218"},[392,394],"[setIsRoomHostAction]",[601,603],"[search, setIsRoomHostAction]",[866,868],"[connectOnlyWithAudio, identity, isRoomHost, roomId]"]